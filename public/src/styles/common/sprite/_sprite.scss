/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$facebook-name: 'facebook';
$facebook-x: 0px;
$facebook-y: 0px;
$facebook-offset-x: 0px;
$facebook-offset-y: 0px;
$facebook-width: 114px;
$facebook-height: 114px;
$facebook-total-width: 228px;
$facebook-total-height: 228px;
$facebook-image: '/images/common/sprite/sprite.png';
$facebook: (0px, 0px, 0px, 0px, 114px, 114px, 228px, 228px, '/images/common/sprite/sprite.png', 'facebook', );
$rss-name: 'rss';
$rss-x: 114px;
$rss-y: 0px;
$rss-offset-x: -114px;
$rss-offset-y: 0px;
$rss-width: 114px;
$rss-height: 114px;
$rss-total-width: 228px;
$rss-total-height: 228px;
$rss-image: '/images/common/sprite/sprite.png';
$rss: (114px, 0px, -114px, 0px, 114px, 114px, 228px, 228px, '/images/common/sprite/sprite.png', 'rss', );
$share-name: 'share';
$share-x: 0px;
$share-y: 114px;
$share-offset-x: 0px;
$share-offset-y: -114px;
$share-width: 114px;
$share-height: 114px;
$share-total-width: 228px;
$share-total-height: 228px;
$share-image: '/images/common/sprite/sprite.png';
$share: (0px, 114px, 0px, -114px, 114px, 114px, 228px, 228px, '/images/common/sprite/sprite.png', 'share', );
$twitter-name: 'twitter';
$twitter-x: 114px;
$twitter-y: 114px;
$twitter-offset-x: -114px;
$twitter-offset-y: -114px;
$twitter-width: 114px;
$twitter-height: 114px;
$twitter-total-width: 228px;
$twitter-total-height: 228px;
$twitter-image: '/images/common/sprite/sprite.png';
$twitter: (114px, 114px, -114px, -114px, 114px, 114px, 228px, 228px, '/images/common/sprite/sprite.png', 'twitter', );
$spritesheet-width: 228px;
$spritesheet-height: 228px;
$spritesheet-image: '/images/common/sprite/sprite.png';
$spritesheet-sprites: ($facebook, $rss, $share, $twitter, );
$spritesheet: (228px, 228px, '/images/common/sprite/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
